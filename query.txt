Iris   ok

/* Enter a unique ExecutionPlan */
@Plan:name('IrisTest')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */


@Import('irisInput:1.0.0')
define stream inputStream (attribute_0 double, attribute_1 double, attribute_2 double, attribute_3 double, attribute_4 string );

@Export('irisOutput:1.0.0')
define stream outputStream (attribute_0 double, attribute_1 double, attribute_2 double, attribute_3 double, attribute_4 string, numInstance int, correctness double, kappa double, tempKappa double, support string, precision string, recall string ,f1score string);

from inputStream#streamingml:streamclassification(1000000, 1000,3,5,0,"",1,0, attribute_0, attribute_1 , attribute_2 , attribute_3 , attribute_4)
select *
insert into outputStream

--------------------------------------------------------------------------------------------

Banknote Authentication  ok 

/* Enter a unique ExecutionPlan */
@Plan:name('BanknoteAuthenticationTest')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */


@Import('banknoteAuthenticationInput:1.0.0')
define stream inputStream (attribute_0 double, attribute_1 double, attribute_2 double, attribute_3 double, attribute_4 string);

@Export('banknoteAuthenticationOutput:1.0.0')
define stream outputStream (attribute_0 double, attribute_1 double, attribute_2 double, attribute_3 double, attribute_4 string, numInstance int, correctness double, kappa double, tempKappa double, support string, precision string, recall string, f1score string);

from inputStream#streamingml:streamclassification(1000000, 1000,2,5,0,"",1,0, attribute_0, attribute_1 , attribute_2 , attribute_3 , attribute_4)
select *
insert into outputStream

---------------------------------------------------------------------------------------

Car Evaluation   *

/* Enter a unique ExecutionPlan */
@Plan:name('CarEvaluationTest')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */


@Import('carEvaluationInput:1.0.0')
define stream inputStream (attribute_0 string, attribute_1 string, attribute_2 string, attribute_3 string, attribute_4 string, attribute_5 string, attribute_6 string);

@Export('carEvaluationOutput:1.0.0')
define stream outputStream (attribute_0 string, attribute_1 string, attribute_2 string, attribute_3 string, attribute_4 string, attribute_5 string, attribute_6 string, numInstance int, correctness double, kappa double, tempKappa double, support string, precision string, recall string, f1score string);

from inputStream#streamingml:streamclassification(1000000, 1000,4,7,6,"3,3,4,3,3,3",1,0, attribute_0, attribute_1 , attribute_2 , attribute_3 , attribute_4, attribute_5, attribute_6 )
select *
insert into outputStream

-----------------------------------------------------------------------------------------------------

Chess  *

/* Enter a unique ExecutionPlan */
@Plan:name('ChessTest')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */

@Import('chessInput:1.0.0')
define stream inputStream (attribute_0 string, attribute_1 string, attribute_2 string, attribute_3 string, attribute_4 string, attribute_5 string, attribute_6 string);

@Export('chessOutput:1.0.0')
define stream outputStream (attribute_0 string, attribute_1 string, attribute_2 string, attribute_3 string, attribute_4 string, attribute_5 string, attribute_6 string, numInstance int, correctness double, kappa double, tempKappa double, support string, precision string, recall string, f1score string);

from inputStream#streamingml:streamclassification(1000000, 1000,18,7,6,"8,8,8,8,8,8",1,0, attribute_0, attribute_1 , attribute_2 , attribute_3 , attribute_4, attribute_5, attribute_6 )
select *
insert into outputStream

-------------------------------------------------------------------------------------------

Nursery     *

/* Enter a unique ExecutionPlan */
@Plan:name('NurseryTest')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */

@Import('nurseryInput:1.0.0')
define stream inputStream (attribute_0 string, attribute_1 string, attribute_2 string, attribute_3 string, attribute_4 string, attribute_5 string, attribute_6 string, attribute_7 string, attribute_8 string);

@Export('nurseryOutput:1.0.0')
define stream outputStream (attribute_0 string, attribute_1 string, attribute_2 string, attribute_3 string, attribute_4 string, attribute_5 string, attribute_6 string, attribute_7 string, attribute_8 string, numInstance int, correctness double, kappa double, tempKappa double, support string, precision string, recall string, f1score string);

from inputStream#streamingml:streamclassification(1000000, 1000,5,9,8,"3,5,4,4,3,2,3,3",1,0,attribute_0, attribute_1 , attribute_2 , attribute_3 , attribute_4, attribute_5, attribute_6, attribute_7, attribute_7 )
select *
insert into outputStream

-------------------------------------------------------------------------------------------

Phoneme 

/* Enter a unique ExecutionPlan */
@Plan:name('PhonemeTest')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */

@Import('phonemeInput:1.0.0')
define stream inputStream (attribute_0 double, attribute_1 double, attribute_2 double, attribute_3 double, attribute_4 double, attribute_5 string);

@Export('PhonemeOutput:1.0.0')
define stream outputStream (attribute_0 double, attribute_1 double, attribute_2 double, attribute_3 double, attribute_4 double, attribute_5 string, numInstance int, correctness double, kappa double, tempKappa double, support string, precision string, recall string, f1score string);

from inputStream#streamingml:streamclassification(1000000, 1000,2,6,0,"",1,0, attribute_0, attribute_1 , attribute_2 , attribute_3 , attribute_4, attribute_5)
select *
insert into outputStream

-----------------------------------------------------------------------------------------------------

